<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Appendix on COCOA Open Source Project</title><link>https://cocoa-mhlw.github.io/cocoa/docs/appendix/</link><description>Recent content in Appendix on COCOA Open Source Project</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><atom:link href="https://cocoa-mhlw.github.io/cocoa/docs/appendix/index.xml" rel="self" type="application/rss+xml"/><item><title>ENv2バージョンアップに関する技術的な検討内容</title><link>https://cocoa-mhlw.github.io/cocoa/docs/appendix/design_for_upgrading_to_env2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/appendix/design_for_upgrading_to_env2/</guid><description>Exposure Notification API v2へのバージョンアップに関する技術的な検討内容について # COCOA v2.0.0からは、利用するExposure Notification API(以下EN)がv2に切り替えられている。 ENv2は、従前のv1と比べて、濃厚接触の可能性を判定する方式が大きく変更されたため、パラメータを最初から設定しなおす必要がある。 そのため、検証専門チームによる実機での計測も行い、その結果も踏まえてパラメータを設計したが、その経緯をまとめたものが本文書である。
なお、当初はv2.0.0では、ENv2の機能を活用した新しい機能も実装する予定だったが、v2.1.0以降に先送りとなってしまったため本文書では取り扱わない。 検討の経緯は、github discussions EN v2を搭載するCOCOAで実現したい機能について #532 を参照のこと。
Exposure Notification v1とv2の違い # 複数の条件を元に、接触内容や想定されるリスクに応じた内容の接触通知を出せるようになる。
リスクを判定するスコア設定の柔軟性が上がる V1…時間・電波強度ともに設定は8段階の値からの選択方式のため、1つの状態しか接触判定できないスコア設計となる V2…時間・電波強度ともに具体的な値で設定でき、複数の状態を接触判定できるようなスコア設計が可能 発症日からの経過日数でリスクの有無を判定できるようになる V1…Exposure Notification側の設定項目がなく、アプリ側での対応が必要 V2…発症日（あるいは検体採取日）から◯日目という形で指定可能 接触に関する詳しい情報を踏まえて、接触通知の内容を変えることが出来る V1…通知はOS側が出し、接触に関する情報も得られないため、どのような接触でも同じ接触通知となる V2…接触に関する詳細な情報（接触時間・電波強度等）が得られ、それを元にリスクに応じた通知をアプリ側で出せる 本ドキュメントでは、根幹に関わる内容である1点目について検討を行った。 なお、2点目については、処理を行う箇所が変わるだけで設定する内容（発症2日前～10日後）は変わらないため、詳細な検討は不要。 また、3点目については、github discussions #532 で議論を行っている。
距離・時間の判定方法が変わることによる影響 # v1は、定義に当てはまる接触の回数を数えるが、v2は、接触時間に重み付けをして合計値を返し、その値(リスクスコア)が閾値を超えているかどうかで判定を行う。
v1では、15分間連続して条件を満たすと接触判定するため、例②のような、一瞬電波強度が弱まるような状態は接触にならない v2では、平均の電波強度別に接触の時間に係数を掛けてスコア判定するため、例②のような状況でも接触と判定する。 ※図では1分毎の電波強度を示しているが、v2では厳密には5分間までの平均値で返されることがある
ENのリスクスコアとは、「接触」時に一定の値を超えるよう設計された数字 # 具体的なパラメータ値(リスクスコアの計算方法と閾値)の検討に入る前に、リスクスコアの意味について確認する。
リスク「スコア」という名前からは、なにか「リスクの大きさに比例する」ものを想像しがちであり、距離・時間と比例する関係にさせないといけないと考えがちである 例：「距離が半分ならスコアは2倍になる」「距離が10分の1ならばスコアは10倍」など しかし、COCOAは、濃厚接触の可能性の「有無」だけを判断するものであり、その目的を踏まえると、距離が1m以内であれば、どのような距離でも15分間接触しなければ閾値を超えないようにスコアを設計しなければならない そのため、「1m以内であれば閾値を超える」「1mを越えれば閾値を大きく下回る」ような計算をする必要がある 背景知識：電波強度と距離の関係 # パラメータ値を設計するにあたり、電波強度と距離の関係を知っておく必要があるため、ここで他の研究結果を確認する。</description></item><item><title>iOS版の通知許可に関するお願い</title><link>https://cocoa-mhlw.github.io/cocoa/docs/appendix/ios_local_notification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/appendix/ios_local_notification/</guid><description>iOS版の通知許可に関するお願い # v1.2.6から、接触確認APIからの通知に加えて「ローカル通知」を利用するように変更しました。 iOS版をお使いの方は、ローカル通知を許可していただく操作が必要です（Android版をお使いの方は本ページの操作は不要です）。
ローカル通知を導入した理由 # 今後、COCOAが利用している「接触確認API」のバージョンアップを予定しています。 バージョンアップ後は接触確認APIからの通知は廃止されます。ローカル通知が許可されていない場合、COCOAから通知を使って接触の可能性をお知らせできません（接触確認処理に影響はありません。また、接触の有無についてはCOCOAの画面上で確認することはできます）。
ローカル通知の許可方法 # ローカル通知の許可方法は、次の通りです。
アプリ起動時の許可 # COCOA v1.2.6をインストールしてはじめてホーム画面を表示するタイミングで、ローカル通知の許可を求めるダイアログが表示されます。 「許可」を選択すると、以後、ローカル通知が有効になります。
バックグラウンド処理時の許可 # COCOA v1.2.6にアップデート後、最初に接触確認を行うタイミング（アップデート完了後、おおむね4時間以内）で、ローカル通知の許可を求めるダイアログを表示します。 「許可」を選択すると、以後、ローカル通知が有効になります。
手動による許可（マニュアル操作） # 「設定」アプリを起動して「通知」を選択します。 「通知スタイル」の中から「接触確認アプリ」を選択して「通知を許可」のスイッチをONにすると、以後、ローカル通知が有効になります。
ローカル通知の許可については、厚生労働省のサイトもご確認ください。
https://www.mhlw.go.jp/content/10906000/000829254.pdf https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/cocoa_00138.html https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/covid19_qa_kanrenkigyou_00009.html#Q4-16</description></item><item><title>設定ファイルの仕様</title><link>https://cocoa-mhlw.github.io/cocoa/docs/appendix/preference_specification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/appendix/preference_specification/</guid><description>v1.3.0 - # 設定項目はAndroid/iOSプラットフォーム固有のKey-value storeに保存する（IPreferencesService） 接触情報はJSON形式に変換後、SecureStorageServiceを通じて暗号化された状態で格納されている 日付情報はUNIX Epoch（e.g. 1592528400） 保存内容 # IPreferencesService # キー 形式 保存内容 AppVersion 文字列 Preferenceが対応しているアプリのバージョン（e.g. 1.3.0） StartDateTimeEpoch 数値（long） 利用開始日時のUNIX Epoch（e.g. 1592528400） TermsOfServiceLastUpdateDateTimeEpoch 数値（long） 利用規約に合意した日時のUNIX Epoch（e.g. 1592528400） PrivacyPolicyLastUpdateDateTimeEpoch 数値（long） プライバシーポリシーに合意した日時のUNIX Epoch（e.g. 1592528400） ExposureNotificationConfiguration 文字列 JSON形式に変換されたXamarin.ExposureNotifications.Configuration LastProcessTekTimestamp 文字列 JSON形式に変換されたDictionary&amp;lt;string, long&amp;gt; キーはRegion（e.g. 440）、数値はTEKのタイムスタンプ（e.g. 1632551138） CanConfirmExposure Boolean 最後に試行した接触確認（診断キーのダウンロード・接触確認実行）が正常に完了したことを示すフラグ LastConfirmedDateTimeEpoch 数値（long） 最後に接触確認を完了した日時のUNIX Epoch（e.</description></item></channel></rss>